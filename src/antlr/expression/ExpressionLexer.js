// Generated from Expression.g4 by ANTLR 4.8
// jshint ignore: start
var antlr4 = require('antlr4/index');



var serializedATN = ["\u0003\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964",
    "\u0002\u001e\u00c2\b\u0001\u0004\u0002\t\u0002\u0004\u0003\t\u0003\u0004",
    "\u0004\t\u0004\u0004\u0005\t\u0005\u0004\u0006\t\u0006\u0004\u0007\t",
    "\u0007\u0004\b\t\b\u0004\t\t\t\u0004\n\t\n\u0004\u000b\t\u000b\u0004",
    "\f\t\f\u0004\r\t\r\u0004\u000e\t\u000e\u0004\u000f\t\u000f\u0004\u0010",
    "\t\u0010\u0004\u0011\t\u0011\u0004\u0012\t\u0012\u0004\u0013\t\u0013",
    "\u0004\u0014\t\u0014\u0004\u0015\t\u0015\u0004\u0016\t\u0016\u0004\u0017",
    "\t\u0017\u0004\u0018\t\u0018\u0004\u0019\t\u0019\u0004\u001a\t\u001a",
    "\u0004\u001b\t\u001b\u0004\u001c\t\u001c\u0004\u001d\t\u001d\u0004\u001e",
    "\t\u001e\u0004\u001f\t\u001f\u0004 \t \u0003\u0002\u0003\u0002\u0003",
    "\u0003\u0003\u0003\u0003\u0004\u0003\u0004\u0003\u0005\u0003\u0005\u0003",
    "\u0006\u0003\u0006\u0003\u0006\u0003\u0007\u0003\u0007\u0003\b\u0003",
    "\b\u0003\t\u0003\t\u0003\n\u0003\n\u0003\u000b\u0003\u000b\u0003\f\u0003",
    "\f\u0003\r\u0003\r\u0003\r\u0003\u000e\u0003\u000e\u0003\u000f\u0003",
    "\u000f\u0003\u000f\u0003\u0010\u0003\u0010\u0003\u0010\u0003\u0011\u0003",
    "\u0011\u0003\u0011\u0003\u0012\u0003\u0012\u0003\u0013\u0003\u0013\u0003",
    "\u0014\u0003\u0014\u0003\u0015\u0003\u0015\u0003\u0015\u0003\u0016\u0003",
    "\u0016\u0003\u0016\u0003\u0017\u0003\u0017\u0003\u0018\u0003\u0018\u0003",
    "\u0019\u0003\u0019\u0005\u0019y\n\u0019\u0003\u0019\u0006\u0019|\n\u0019",
    "\r\u0019\u000e\u0019}\u0003\u001a\u0003\u001a\u0003\u001a\u0003\u001a",
    "\u0005\u001a\u0084\n\u001a\u0003\u001b\u0003\u001b\u0003\u001b\u0003",
    "\u001b\u0003\u001b\u0003\u001b\u0003\u001b\u0003\u001b\u0003\u001b\u0005",
    "\u001b\u008f\n\u001b\u0003\u001c\u0005\u001c\u0092\n\u001c\u0003\u001c",
    "\u0006\u001c\u0095\n\u001c\r\u001c\u000e\u001c\u0096\u0003\u001c\u0003",
    "\u001c\u0007\u001c\u009b\n\u001c\f\u001c\u000e\u001c\u009e\u000b\u001c",
    "\u0003\u001c\u0005\u001c\u00a1\n\u001c\u0003\u001d\u0005\u001d\u00a4",
    "\n\u001d\u0003\u001d\u0006\u001d\u00a7\n\u001d\r\u001d\u000e\u001d\u00a8",
    "\u0003\u001e\u0003\u001e\u0003\u001e\u0003\u001e\u0003\u001e\u0006\u001e",
    "\u00b0\n\u001e\r\u001e\u000e\u001e\u00b1\u0003\u001f\u0003\u001f\u0006",
    "\u001f\u00b6\n\u001f\r\u001f\u000e\u001f\u00b7\u0003\u001f\u0003\u001f",
    "\u0003 \u0006 \u00bd\n \r \u000e \u00be\u0003 \u0003 \u0002\u0002!\u0003",
    "\u0003\u0005\u0004\u0007\u0005\t\u0006\u000b\u0007\r\b\u000f\t\u0011",
    "\n\u0013\u000b\u0015\f\u0017\r\u0019\u000e\u001b\u000f\u001d\u0010\u001f",
    "\u0011!\u0012#\u0013%\u0014\'\u0015)\u0016+\u0017-\u0002/\u00021\u0002",
    "3\u00185\u00197\u001a9\u001b;\u001c=\u001d?\u001e\u0003\u0002\t\u0003",
    "\u00022;\u0004\u0002C\\c|\u0004\u0002GGgg\u0004\u0002--//\u0004\u0002",
    "CHch\u0003\u0002bb\u0005\u0002\u000b\f\u000f\u000f\"\"\u0002\u00ce\u0002",
    "\u0003\u0003\u0002\u0002\u0002\u0002\u0005\u0003\u0002\u0002\u0002\u0002",
    "\u0007\u0003\u0002\u0002\u0002\u0002\t\u0003\u0002\u0002\u0002\u0002",
    "\u000b\u0003\u0002\u0002\u0002\u0002\r\u0003\u0002\u0002\u0002\u0002",
    "\u000f\u0003\u0002\u0002\u0002\u0002\u0011\u0003\u0002\u0002\u0002\u0002",
    "\u0013\u0003\u0002\u0002\u0002\u0002\u0015\u0003\u0002\u0002\u0002\u0002",
    "\u0017\u0003\u0002\u0002\u0002\u0002\u0019\u0003\u0002\u0002\u0002\u0002",
    "\u001b\u0003\u0002\u0002\u0002\u0002\u001d\u0003\u0002\u0002\u0002\u0002",
    "\u001f\u0003\u0002\u0002\u0002\u0002!\u0003\u0002\u0002\u0002\u0002",
    "#\u0003\u0002\u0002\u0002\u0002%\u0003\u0002\u0002\u0002\u0002\'\u0003",
    "\u0002\u0002\u0002\u0002)\u0003\u0002\u0002\u0002\u0002+\u0003\u0002",
    "\u0002\u0002\u00023\u0003\u0002\u0002\u0002\u00025\u0003\u0002\u0002",
    "\u0002\u00027\u0003\u0002\u0002\u0002\u00029\u0003\u0002\u0002\u0002",
    "\u0002;\u0003\u0002\u0002\u0002\u0002=\u0003\u0002\u0002\u0002\u0002",
    "?\u0003\u0002\u0002\u0002\u0003A\u0003\u0002\u0002\u0002\u0005C\u0003",
    "\u0002\u0002\u0002\u0007E\u0003\u0002\u0002\u0002\tG\u0003\u0002\u0002",
    "\u0002\u000bI\u0003\u0002\u0002\u0002\rL\u0003\u0002\u0002\u0002\u000f",
    "N\u0003\u0002\u0002\u0002\u0011P\u0003\u0002\u0002\u0002\u0013R\u0003",
    "\u0002\u0002\u0002\u0015T\u0003\u0002\u0002\u0002\u0017V\u0003\u0002",
    "\u0002\u0002\u0019X\u0003\u0002\u0002\u0002\u001b[\u0003\u0002\u0002",
    "\u0002\u001d]\u0003\u0002\u0002\u0002\u001f`\u0003\u0002\u0002\u0002",
    "!c\u0003\u0002\u0002\u0002#f\u0003\u0002\u0002\u0002%h\u0003\u0002\u0002",
    "\u0002\'j\u0003\u0002\u0002\u0002)l\u0003\u0002\u0002\u0002+o\u0003",
    "\u0002\u0002\u0002-r\u0003\u0002\u0002\u0002/t\u0003\u0002\u0002\u0002",
    "1v\u0003\u0002\u0002\u00023\u0083\u0003\u0002\u0002\u00025\u008e\u0003",
    "\u0002\u0002\u00027\u0091\u0003\u0002\u0002\u00029\u00a3\u0003\u0002",
    "\u0002\u0002;\u00aa\u0003\u0002\u0002\u0002=\u00b3\u0003\u0002\u0002",
    "\u0002?\u00bc\u0003\u0002\u0002\u0002AB\u0007*\u0002\u0002B\u0004\u0003",
    "\u0002\u0002\u0002CD\u0007+\u0002\u0002D\u0006\u0003\u0002\u0002\u0002",
    "EF\u0007#\u0002\u0002F\b\u0003\u0002\u0002\u0002GH\u0007\u0080\u0002",
    "\u0002H\n\u0003\u0002\u0002\u0002IJ\u0007,\u0002\u0002JK\u0007,\u0002",
    "\u0002K\f\u0003\u0002\u0002\u0002LM\u0007,\u0002\u0002M\u000e\u0003",
    "\u0002\u0002\u0002NO\u00071\u0002\u0002O\u0010\u0003\u0002\u0002\u0002",
    "PQ\u0007\'\u0002\u0002Q\u0012\u0003\u0002\u0002\u0002RS\u0007-\u0002",
    "\u0002S\u0014\u0003\u0002\u0002\u0002TU\u0007/\u0002\u0002U\u0016\u0003",
    "\u0002\u0002\u0002VW\u0007>\u0002\u0002W\u0018\u0003\u0002\u0002\u0002",
    "XY\u0007>\u0002\u0002YZ\u0007?\u0002\u0002Z\u001a\u0003\u0002\u0002",
    "\u0002[\\\u0007@\u0002\u0002\\\u001c\u0003\u0002\u0002\u0002]^\u0007",
    "@\u0002\u0002^_\u0007?\u0002\u0002_\u001e\u0003\u0002\u0002\u0002`a",
    "\u0007?\u0002\u0002ab\u0007?\u0002\u0002b \u0003\u0002\u0002\u0002c",
    "d\u0007#\u0002\u0002de\u0007?\u0002\u0002e\"\u0003\u0002\u0002\u0002",
    "fg\u0007(\u0002\u0002g$\u0003\u0002\u0002\u0002hi\u0007`\u0002\u0002",
    "i&\u0003\u0002\u0002\u0002jk\u0007~\u0002\u0002k(\u0003\u0002\u0002",
    "\u0002lm\u0007(\u0002\u0002mn\u0007(\u0002\u0002n*\u0003\u0002\u0002",
    "\u0002op\u0007~\u0002\u0002pq\u0007~\u0002\u0002q,\u0003\u0002\u0002",
    "\u0002rs\t\u0002\u0002\u0002s.\u0003\u0002\u0002\u0002tu\t\u0003\u0002",
    "\u0002u0\u0003\u0002\u0002\u0002vx\t\u0004\u0002\u0002wy\t\u0005\u0002",
    "\u0002xw\u0003\u0002\u0002\u0002xy\u0003\u0002\u0002\u0002y{\u0003\u0002",
    "\u0002\u0002z|\u0005-\u0017\u0002{z\u0003\u0002\u0002\u0002|}\u0003",
    "\u0002\u0002\u0002}{\u0003\u0002\u0002\u0002}~\u0003\u0002\u0002\u0002",
    "~2\u0003\u0002\u0002\u0002\u007f\u0084\u00055\u001b\u0002\u0080\u0084",
    "\u00057\u001c\u0002\u0081\u0084\u00059\u001d\u0002\u0082\u0084\u0005",
    ";\u001e\u0002\u0083\u007f\u0003\u0002\u0002\u0002\u0083\u0080\u0003",
    "\u0002\u0002\u0002\u0083\u0081\u0003\u0002\u0002\u0002\u0083\u0082\u0003",
    "\u0002\u0002\u0002\u00844\u0003\u0002\u0002\u0002\u0085\u0086\u0007",
    "v\u0002\u0002\u0086\u0087\u0007t\u0002\u0002\u0087\u0088\u0007w\u0002",
    "\u0002\u0088\u008f\u0007g\u0002\u0002\u0089\u008a\u0007h\u0002\u0002",
    "\u008a\u008b\u0007c\u0002\u0002\u008b\u008c\u0007n\u0002\u0002\u008c",
    "\u008d\u0007u\u0002\u0002\u008d\u008f\u0007g\u0002\u0002\u008e\u0085",
    "\u0003\u0002\u0002\u0002\u008e\u0089\u0003\u0002\u0002\u0002\u008f6",
    "\u0003\u0002\u0002\u0002\u0090\u0092\u0007/\u0002\u0002\u0091\u0090",
    "\u0003\u0002\u0002\u0002\u0091\u0092\u0003\u0002\u0002\u0002\u0092\u0094",
    "\u0003\u0002\u0002\u0002\u0093\u0095\u0005-\u0017\u0002\u0094\u0093",
    "\u0003\u0002\u0002\u0002\u0095\u0096\u0003\u0002\u0002\u0002\u0096\u0094",
    "\u0003\u0002\u0002\u0002\u0096\u0097\u0003\u0002\u0002\u0002\u0097\u0098",
    "\u0003\u0002\u0002\u0002\u0098\u009c\u00070\u0002\u0002\u0099\u009b",
    "\u0005-\u0017\u0002\u009a\u0099\u0003\u0002\u0002\u0002\u009b\u009e",
    "\u0003\u0002\u0002\u0002\u009c\u009a\u0003\u0002\u0002\u0002\u009c\u009d",
    "\u0003\u0002\u0002\u0002\u009d\u00a0\u0003\u0002\u0002\u0002\u009e\u009c",
    "\u0003\u0002\u0002\u0002\u009f\u00a1\u00051\u0019\u0002\u00a0\u009f",
    "\u0003\u0002\u0002\u0002\u00a0\u00a1\u0003\u0002\u0002\u0002\u00a18",
    "\u0003\u0002\u0002\u0002\u00a2\u00a4\u0007/\u0002\u0002\u00a3\u00a2",
    "\u0003\u0002\u0002\u0002\u00a3\u00a4\u0003\u0002\u0002\u0002\u00a4\u00a6",
    "\u0003\u0002\u0002\u0002\u00a5\u00a7\u0005-\u0017\u0002\u00a6\u00a5",
    "\u0003\u0002\u0002\u0002\u00a7\u00a8\u0003\u0002\u0002\u0002\u00a8\u00a6",
    "\u0003\u0002\u0002\u0002\u00a8\u00a9\u0003\u0002\u0002\u0002\u00a9:",
    "\u0003\u0002\u0002\u0002\u00aa\u00ab\u00072\u0002\u0002\u00ab\u00ac",
    "\u0007z\u0002\u0002\u00ac\u00af\u0003\u0002\u0002\u0002\u00ad\u00b0",
    "\u0005-\u0017\u0002\u00ae\u00b0\t\u0006\u0002\u0002\u00af\u00ad\u0003",
    "\u0002\u0002\u0002\u00af\u00ae\u0003\u0002\u0002\u0002\u00b0\u00b1\u0003",
    "\u0002\u0002\u0002\u00b1\u00af\u0003\u0002\u0002\u0002\u00b1\u00b2\u0003",
    "\u0002\u0002\u0002\u00b2<\u0003\u0002\u0002\u0002\u00b3\u00b5\u0007",
    "b\u0002\u0002\u00b4\u00b6\n\u0007\u0002\u0002\u00b5\u00b4\u0003\u0002",
    "\u0002\u0002\u00b6\u00b7\u0003\u0002\u0002\u0002\u00b7\u00b5\u0003\u0002",
    "\u0002\u0002\u00b7\u00b8\u0003\u0002\u0002\u0002\u00b8\u00b9\u0003\u0002",
    "\u0002\u0002\u00b9\u00ba\u0007b\u0002\u0002\u00ba>\u0003\u0002\u0002",
    "\u0002\u00bb\u00bd\t\b\u0002\u0002\u00bc\u00bb\u0003\u0002\u0002\u0002",
    "\u00bd\u00be\u0003\u0002\u0002\u0002\u00be\u00bc\u0003\u0002\u0002\u0002",
    "\u00be\u00bf\u0003\u0002\u0002\u0002\u00bf\u00c0\u0003\u0002\u0002\u0002",
    "\u00c0\u00c1\b \u0002\u0002\u00c1@\u0003\u0002\u0002\u0002\u0011\u0002",
    "x}\u0083\u008e\u0091\u0096\u009c\u00a0\u00a3\u00a8\u00af\u00b1\u00b7",
    "\u00be\u0003\b\u0002\u0002"].join("");


var atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

var decisionsToDFA = atn.decisionToState.map( function(ds, index) { return new antlr4.dfa.DFA(ds, index); });

function ExpressionLexer(input) {
	antlr4.Lexer.call(this, input);
    this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.PredictionContextCache());
    return this;
}

ExpressionLexer.prototype = Object.create(antlr4.Lexer.prototype);
ExpressionLexer.prototype.constructor = ExpressionLexer;

Object.defineProperty(ExpressionLexer.prototype, "atn", {
        get : function() {
                return atn;
        }
});

ExpressionLexer.EOF = antlr4.Token.EOF;
ExpressionLexer.T__0 = 1;
ExpressionLexer.T__1 = 2;
ExpressionLexer.T__2 = 3;
ExpressionLexer.T__3 = 4;
ExpressionLexer.T__4 = 5;
ExpressionLexer.T__5 = 6;
ExpressionLexer.T__6 = 7;
ExpressionLexer.T__7 = 8;
ExpressionLexer.T__8 = 9;
ExpressionLexer.T__9 = 10;
ExpressionLexer.T__10 = 11;
ExpressionLexer.T__11 = 12;
ExpressionLexer.T__12 = 13;
ExpressionLexer.T__13 = 14;
ExpressionLexer.T__14 = 15;
ExpressionLexer.T__15 = 16;
ExpressionLexer.T__16 = 17;
ExpressionLexer.T__17 = 18;
ExpressionLexer.T__18 = 19;
ExpressionLexer.T__19 = 20;
ExpressionLexer.T__20 = 21;
ExpressionLexer.VALUE = 22;
ExpressionLexer.BOOL = 23;
ExpressionLexer.FLOAT = 24;
ExpressionLexer.INTEGER = 25;
ExpressionLexer.HEX = 26;
ExpressionLexer.ID = 27;
ExpressionLexer.WS = 28;

ExpressionLexer.prototype.channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];

ExpressionLexer.prototype.modeNames = [ "DEFAULT_MODE" ];

ExpressionLexer.prototype.literalNames = [ null, "'('", "')'", "'!'", "'~'", 
                                           "'**'", "'*'", "'/'", "'%'", 
                                           "'+'", "'-'", "'<'", "'<='", 
                                           "'>'", "'>='", "'=='", "'!='", 
                                           "'&'", "'^'", "'|'", "'&&'", 
                                           "'||'" ];

ExpressionLexer.prototype.symbolicNames = [ null, null, null, null, null, 
                                            null, null, null, null, null, 
                                            null, null, null, null, null, 
                                            null, null, null, null, null, 
                                            null, null, "VALUE", "BOOL", 
                                            "FLOAT", "INTEGER", "HEX", "ID", 
                                            "WS" ];

ExpressionLexer.prototype.ruleNames = [ "T__0", "T__1", "T__2", "T__3", 
                                        "T__4", "T__5", "T__6", "T__7", 
                                        "T__8", "T__9", "T__10", "T__11", 
                                        "T__12", "T__13", "T__14", "T__15", 
                                        "T__16", "T__17", "T__18", "T__19", 
                                        "T__20", "DIGIT", "LETTER", "EXPONENT", 
                                        "VALUE", "BOOL", "FLOAT", "INTEGER", 
                                        "HEX", "ID", "WS" ];

ExpressionLexer.prototype.grammarFileName = "Expression.g4";


exports.ExpressionLexer = ExpressionLexer;

